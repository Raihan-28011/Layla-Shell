# 
#    Copyright 2019 (c)
#    Mohammed Isam Mohammed [mohammed_isam1984@yahoo.com]
# 
#    file: Makefile
#    This file is part of the Layla Shell project.
#
#    Layla Shell is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    Layla Shell is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Layla Shell.  If not, see <http://www.gnu.org/licenses/>.
#    

#Some basic definitions
PROJECT_ROOT=$(dir $(abspath $(lastword $(MAKEFILE_LIST))))
pkgname=lsh
TARGET=$(pkgname)
SRCDIR=$(PROJECT_ROOT)
BUILDDIR=build
ifeq ($(BUILD_MODE),debug)
	CFLAGS += -g
else ifeq ($(BUILD_MODE),run)
	CFLAGS += -O2
else
	$(error Build mode $(BUILD_MODE) not supported by this Makefile)
endif

# librt is needed for timer_create() and timer_settime()
CFLAGS += lrt

SRCFILES=main.c strings.c terminal.c alphalist.c shunt.c braceexp.c functab.c strbuf.c popen.c wordexp.c cmdline.c helpfunc.c initsh.c jobs.c prompt.c args.c params.c sig.c tab.c kbdevent2.c early_environ.h cmd.h cpu.h ostype.h sig.h kbdevent.h vars.c vi.c vi.h vi_keys.c scanner/lexical.c scanner/source.c scanner/scanner.h scanner/source.h scanner/keywords.h parser/node.c parser/parser.c parser/node.h parser/conditionals.c parser/loops.c parser/redirect.c backend/loops.c backend/conditionals.c backend/backend.c backend/backend.h backend/pattern.c backend/redirect.c symtab/symtab_hash.c symtab/symtab_hash.h symtab/symtab.h symtab/string_hash.c symtab/string_hash.h error/error.c error/error.h builtins/builtins.c builtins/help.c builtins/history.c builtins/alias.c builtins/bg.c builtins/cd.c builtins/command.c builtins/echo.c builtins/false.c builtins/fc.c builtins/fg.c builtins/getopts.c builtins/hash.c builtins/kill.c builtins/newgrp.c builtins/pwd.c builtins/read.c builtins/true.c builtins/type.c builtins/ulimit.c builtins/umask.c builtins/unalias.c builtins/wait.c builtins/colon.c builtins/dot.c builtins/disown.c builtins/eval.c builtins/exec.c builtins/exit.c builtins/export.c builtins/mailcheck.c builtins/readonly.c builtins/return.c builtins/set.c builtins/shift.c builtins/source.c builtins/time.c builtins/times.c builtins/trap.c builtins/test.c builtins/unset.c builtins/ver.c builtins/dump.c builtins/let.c builtins/whence.c builtins/setx.c builtins/setx.h builtins/coproc.c builtins/local.c builtins/caller.c builtins/declare.c builtins/enable.c builtins/logout.c builtins/memusage.c builtins/dirstack.c builtins/suspend.c builtins/hist_expand.c builtins/bugreport.c builtins/nice.c builtins/hup.c builtins/notify.c builtins/glob.c builtins/printenv.c builtins/repeat.c builtins/setenv.c builtins/stop.c builtins/unlimit.c builtins/unsetenv.c comptype.h debug.c debug.h

# 
# Targets:
# 
all: lsh

lsh: clean
	@echo -> Compiling executable
	@cd $(PROJECT_ROOT) && $(CC) $(CFLAGS) -o $(TARGET) $(SRCFILES)

clean:
	$(RM) -r *.o

.PHONY: all
